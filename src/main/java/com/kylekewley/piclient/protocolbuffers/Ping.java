package com.kylekewley.piclient.protocolbuffers;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ProtocolBuffers/Ping.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class Ping extends Message {

  public static final Integer DEFAULT_SENTTIME = 0;
  public static final String DEFAULT_MESSAGE = "";

  @ProtoField(tag = 1, type = UINT32)
  public final Integer sentTime;

  @ProtoField(tag = 2, type = STRING)
  public final String message;

  public Ping(Integer sentTime, String message) {
    this.sentTime = sentTime;
    this.message = message;
  }

  private Ping(@NotNull Builder builder) {
    this(builder.sentTime, builder.message);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Ping)) return false;
    Ping o = (Ping) other;
    return equals(sentTime, o.sentTime)
        && equals(message, o.message);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = sentTime != null ? sentTime.hashCode() : 0;
      result = result * 37 + (message != null ? message.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Ping> {

    public Integer sentTime;
    public String message;

    public Builder() {
    }

    public Builder(@Nullable Ping message) {
      super(message);
      if (message == null) return;
      this.sentTime = message.sentTime;
      this.message = message.message;
    }

    @NotNull
    public Builder sentTime(Integer sentTime) {
      this.sentTime = sentTime;
      return this;
    }

    @NotNull
    public Builder message(String message) {
      this.message = message;
      return this;
    }

    @NotNull
    @Override
    public Ping build() {
      return new Ping(this);
    }
  }
}
