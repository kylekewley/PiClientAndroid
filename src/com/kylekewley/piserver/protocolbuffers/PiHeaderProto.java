package com.kylekewley.piserver.protocolbuffers;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PiHeader.proto

public final class PiHeaderProto {
  private PiHeaderProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PiHeaderOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 messageLength = 1;
    /**
     * <code>required uint32 messageLength = 1;</code>
     */
    boolean hasMessageLength();
    /**
     * <code>required uint32 messageLength = 1;</code>
     */
    int getMessageLength();

    // required uint32 parserID = 2;
    /**
     * <code>required uint32 parserID = 2;</code>
     */
    boolean hasParserID();
    /**
     * <code>required uint32 parserID = 2;</code>
     */
    int getParserID();

    // optional uint32 messageID = 3;
    /**
     * <code>optional uint32 messageID = 3;</code>
     */
    boolean hasMessageID();
    /**
     * <code>optional uint32 messageID = 3;</code>
     */
    int getMessageID();

    // optional uint32 flags = 4;
    /**
     * <code>optional uint32 flags = 4;</code>
     */
    boolean hasFlags();
    /**
     * <code>optional uint32 flags = 4;</code>
     */
    int getFlags();

    // optional bool successResponse = 5;
    /**
     * <code>optional bool successResponse = 5;</code>
     */
    boolean hasSuccessResponse();
    /**
     * <code>optional bool successResponse = 5;</code>
     */
    boolean getSuccessResponse();
  }
  /**
   * Protobuf type {@code PiHeader}
   */
  public static final class PiHeader extends
      com.google.protobuf.GeneratedMessageLite
      implements PiHeaderOrBuilder {
    // Use PiHeader.newBuilder() to construct.
    private PiHeader(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PiHeader(boolean noInit) {}

    private static final PiHeader defaultInstance;
    public static PiHeader getDefaultInstance() {
      return defaultInstance;
    }

    public PiHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PiHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              messageLength_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              parserID_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              messageID_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              flags_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              successResponse_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PiHeader> PARSER =
        new com.google.protobuf.AbstractParser<PiHeader>() {
      public PiHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PiHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PiHeader> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 messageLength = 1;
    public static final int MESSAGELENGTH_FIELD_NUMBER = 1;
    private int messageLength_;
    /**
     * <code>required uint32 messageLength = 1;</code>
     */
    public boolean hasMessageLength() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 messageLength = 1;</code>
     */
    public int getMessageLength() {
      return messageLength_;
    }

    // required uint32 parserID = 2;
    public static final int PARSERID_FIELD_NUMBER = 2;
    private int parserID_;
    /**
     * <code>required uint32 parserID = 2;</code>
     */
    public boolean hasParserID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 parserID = 2;</code>
     */
    public int getParserID() {
      return parserID_;
    }

    // optional uint32 messageID = 3;
    public static final int MESSAGEID_FIELD_NUMBER = 3;
    private int messageID_;
    /**
     * <code>optional uint32 messageID = 3;</code>
     */
    public boolean hasMessageID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 messageID = 3;</code>
     */
    public int getMessageID() {
      return messageID_;
    }

    // optional uint32 flags = 4;
    public static final int FLAGS_FIELD_NUMBER = 4;
    private int flags_;
    /**
     * <code>optional uint32 flags = 4;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 flags = 4;</code>
     */
    public int getFlags() {
      return flags_;
    }

    // optional bool successResponse = 5;
    public static final int SUCCESSRESPONSE_FIELD_NUMBER = 5;
    private boolean successResponse_;
    /**
     * <code>optional bool successResponse = 5;</code>
     */
    public boolean hasSuccessResponse() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool successResponse = 5;</code>
     */
    public boolean getSuccessResponse() {
      return successResponse_;
    }

    private void initFields() {
      messageLength_ = 0;
      parserID_ = 0;
      messageID_ = 0;
      flags_ = 0;
      successResponse_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMessageLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasParserID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, messageLength_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, parserID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, messageID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, flags_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, successResponse_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, messageLength_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, parserID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, messageID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, flags_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, successResponse_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PiHeaderProto.PiHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PiHeaderProto.PiHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PiHeaderProto.PiHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PiHeaderProto.PiHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PiHeaderProto.PiHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PiHeaderProto.PiHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PiHeaderProto.PiHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PiHeaderProto.PiHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PiHeaderProto.PiHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PiHeaderProto.PiHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PiHeaderProto.PiHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PiHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          PiHeaderProto.PiHeader, Builder>
        implements PiHeaderProto.PiHeaderOrBuilder {
      // Construct using com.kylekewley.piserver.protocolbuffers.PiHeaderProto.PiHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messageLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        parserID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        messageID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        successResponse_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public PiHeaderProto.PiHeader getDefaultInstanceForType() {
        return PiHeaderProto.PiHeader.getDefaultInstance();
      }

      public PiHeaderProto.PiHeader build() {
        PiHeaderProto.PiHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PiHeaderProto.PiHeader buildPartial() {
        PiHeaderProto.PiHeader result = new PiHeaderProto.PiHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageLength_ = messageLength_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.parserID_ = parserID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageID_ = messageID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.successResponse_ = successResponse_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(PiHeaderProto.PiHeader other) {
        if (other == PiHeaderProto.PiHeader.getDefaultInstance()) return this;
        if (other.hasMessageLength()) {
          setMessageLength(other.getMessageLength());
        }
        if (other.hasParserID()) {
          setParserID(other.getParserID());
        }
        if (other.hasMessageID()) {
          setMessageID(other.getMessageID());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasSuccessResponse()) {
          setSuccessResponse(other.getSuccessResponse());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMessageLength()) {
          
          return false;
        }
        if (!hasParserID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PiHeaderProto.PiHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PiHeaderProto.PiHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 messageLength = 1;
      private int messageLength_ ;
      /**
       * <code>required uint32 messageLength = 1;</code>
       */
      public boolean hasMessageLength() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 messageLength = 1;</code>
       */
      public int getMessageLength() {
        return messageLength_;
      }
      /**
       * <code>required uint32 messageLength = 1;</code>
       */
      public Builder setMessageLength(int value) {
        bitField0_ |= 0x00000001;
        messageLength_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 messageLength = 1;</code>
       */
      public Builder clearMessageLength() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageLength_ = 0;
        
        return this;
      }

      // required uint32 parserID = 2;
      private int parserID_ ;
      /**
       * <code>required uint32 parserID = 2;</code>
       */
      public boolean hasParserID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 parserID = 2;</code>
       */
      public int getParserID() {
        return parserID_;
      }
      /**
       * <code>required uint32 parserID = 2;</code>
       */
      public Builder setParserID(int value) {
        bitField0_ |= 0x00000002;
        parserID_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 parserID = 2;</code>
       */
      public Builder clearParserID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        parserID_ = 0;
        
        return this;
      }

      // optional uint32 messageID = 3;
      private int messageID_ ;
      /**
       * <code>optional uint32 messageID = 3;</code>
       */
      public boolean hasMessageID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 messageID = 3;</code>
       */
      public int getMessageID() {
        return messageID_;
      }
      /**
       * <code>optional uint32 messageID = 3;</code>
       */
      public Builder setMessageID(int value) {
        bitField0_ |= 0x00000004;
        messageID_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 messageID = 3;</code>
       */
      public Builder clearMessageID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageID_ = 0;
        
        return this;
      }

      // optional uint32 flags = 4;
      private int flags_ ;
      /**
       * <code>optional uint32 flags = 4;</code>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 flags = 4;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional uint32 flags = 4;</code>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000008;
        flags_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 flags = 4;</code>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000008);
        flags_ = 0;
        
        return this;
      }

      // optional bool successResponse = 5;
      private boolean successResponse_ ;
      /**
       * <code>optional bool successResponse = 5;</code>
       */
      public boolean hasSuccessResponse() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool successResponse = 5;</code>
       */
      public boolean getSuccessResponse() {
        return successResponse_;
      }
      /**
       * <code>optional bool successResponse = 5;</code>
       */
      public Builder setSuccessResponse(boolean value) {
        bitField0_ |= 0x00000010;
        successResponse_ = value;
        
        return this;
      }
      /**
       * <code>optional bool successResponse = 5;</code>
       */
      public Builder clearSuccessResponse() {
        bitField0_ = (bitField0_ & ~0x00000010);
        successResponse_ = false;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PiHeader)
    }

    static {
      defaultInstance = new PiHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PiHeader)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
